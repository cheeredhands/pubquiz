# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
#on:
#  release:
#    types: [created]
name: team-frontend - build, test and deploy 
on: 
  push:
    paths: ['.github/workflows/team-frontend-build-and-deploy.yml','team-frontend/**']
    branches: [ master ]
  pull_request:
    paths: ['.github/workflows/team-frontend-build-and-deploy.yml','team-frontend/**']
    branches: [ master ]
    
env:
#  AZURE_WEBAPP_NAME: thenanne-web    # set this to your application's name
#  AZURE_WEBAPP_PACKAGE_PATH: 'team-frontend/dist'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '13.x'                # set this to the node version to use

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      working-directory: team-frontend
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        npm install
        npm run build-prod --if-present
        npm run test --if-present
        # move the contents of the dist folder to a subfolder called
        # wwwroot. 
        mkdir pub
        mv dist/* pub
        mv pub wwwroot
        mv wwwroot dist/
        ls dist/wwwroot
    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: dist-folder # Upload artifact with name `dist`
        path: 'team-frontend/dist' # Upload content of `dist` folder
  deploy:
    name: ftp deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download bundle
        uses: actions/download-artifact@master
        with:
          name: dist-folder # Download artifact named `my_artifact_name` (matches build step: Upload bundle)
          path: dist # Optional, downloads to current working directory under folder {artifact_name} if not specified
      - name: Debug Files
        run: ls
      - name: Upload to FTP
        uses: isthatcentered/dist-to-ftp@master
        with:
          user: ${{ secrets.THENANNE_FTP_USER }} # Ftp user Ex:
          password: ${{ secrets.FTP_PASSWORD }} # Ftp password Ex:
          host: ${{ secrets.THENANNE_FTP_SERVER }} # Ftp host Ex:
          # port: ${{ secrets.FTP_PORT }} # (optional) FTP port, defaults to 21
          path: dist # Folder to deploy Ex: apps/frontend/dist or dist
          into: wwwroot # Where to place the files in your ftp
          cleanupExisting: true # (Optional), Remove already existing files inside FTP destination folder (`into` parameter)
#    - name: FTP Deploy
#      uses: SamKirkland/FTP-Deploy-Action@3.0.0
#      with:
#        # Deployment destination server & path. Formatted as protocol://domain.com:port/full/destination/path/
#        ftp-server: ${{ secrets.THENANNE_FTP_SERVER }}
#        # FTP account username
#        ftp-username: ${{ secrets.THENANNE_FTP_USER }}
#        # FTP account password
#        ftp-password: ${{ secrets.THENANNE_FTP_PASSWORD }}
#        # The local folder to copy, defaults to root project folder
#        local-dir: team-frontend/dist/
#    - name: 'Deploy to Azure WebApp'
#      uses: azure/webapps-deploy@v2
#      with:
#        app-name: ${{ env.AZURE_WEBAPP_NAME }}
#        publish-profile: ${{ secrets.THENANNE_WEB_PUBLISH_PROFILE }}
#        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
