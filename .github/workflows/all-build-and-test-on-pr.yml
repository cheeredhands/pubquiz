# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples

name: all - build and test on pr
# on:
#  release:
#    types: [created, edited]

on: 
  pull_request:
    #paths: ['.github/workflows/team-frontend-build-and-deploy.yml','team-frontend/**']
    branches: [ master ]
    
env:
#  AZURE_WEBAPP_NAME: thenanne-web    # set this to your application's name
#  AZURE_WEBAPP_PACKAGE_PATH: 'team-frontend/dist'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '13.x'                # set this to the node version to use

jobs:
  build-team-frontend:
    name: build team-frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install
      working-directory: team-frontend
      run: npm install
    - name: npm run build
      working-directory: team-frontend
      run: npm run build
    - name: npm run test
      working-directory: team-frontend
      run: npm run test --if-present
  build-backend:
    name: build backend
    runs-on: ubuntu-latest
    needs: build-team-frontend
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Install dependencies
      working-directory: backend
      run: dotnet restore
    - name: Build
      working-directory: backend
      run: dotnet build --configuration Release --no-restore
    - name: Test
      working-directory: backend
      run: dotnet test --no-restore --verbosity normal
    - name: Download team-frontend artifact
      uses: actions/download-artifact@master
      with:
        name: dist-folder 
        path: ${{env.DOTNET_ROOT}}/myapp/wwwroot
    - name: Notify slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: sourcecontrol
        status: SUCCESS
        color: good
    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: sourcecontrol
        status: FAILED
        color: danger

